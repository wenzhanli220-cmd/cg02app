{"uid":"a49e7bfb31e8379a","name":"test_quick_pairing_multi_device","fullName":"ai_mate_tests.testsplan.test_search_and_pair#test_quick_pairing_multi_device","historyId":"12933beb0eefa3d22e04cb2866865a99","time":{"start":1761015078963,"stop":1761015165977,"duration":87014},"description":"多设备快速配对测试 - xdist 兼容","descriptionHtml":"<p>多设备快速配对测试 - xdist 兼容</p>\n","status":"failed","statusMessage":"Failed: 快速测试失败设备: device1, device2","statusTrace":"parallel_drivers = {'device1': <appium.webdriver.webdriver.WebDriver (session=\"6b85011c-41ef-4316-9579-a2b108dc9200\")>, 'device2': <appium.webdriver.webdriver.WebDriver (session=\"f227cef4-402d-4092-a828-cd2d7d1a1873\")>}\n\n    @pytest.mark.app_type(\"ai_mate\")\n    def test_quick_pairing_multi_device(parallel_drivers):\n        \"\"\"多设备快速配对测试 - xdist 兼容\"\"\"\n        failed_devices = []\n    \n        for device_name, driver in parallel_drivers.items():\n            try:\n                device = DevicePage(driver)\n                popup = PopupPage(driver)\n    \n                popup.handle_interference_popup()\n    \n                # 快速配对流程\n                assert device.complete_pairing_flow(), f\"{device_name} 快速配对失败\"\n    \n                print(f\"✅ {device_name} - 快速配对成功\")\n            except Exception as e:\n                print(f\"❌ {device_name} - 快速配对失败: {e}\")\n                failed_devices.append(device_name)\n    \n        if failed_devices:\n>           pytest.fail(f\"快速测试失败设备: {', '.join(failed_devices)}\")\nE           Failed: 快速测试失败设备: device1, device2\n\nai_mate_tests\\testsplan\\test_search_and_pair.py:88: Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"device_manager","time":{"start":1761014874413,"stop":1761014874413,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"parallel_drivers","time":{"start":1761015056988,"stop":1761015078962,"duration":21974},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"description":"多设备快速配对测试 - xdist 兼容","status":"failed","statusMessage":"Failed: 快速测试失败设备: device1, device2","statusTrace":"parallel_drivers = {'device1': <appium.webdriver.webdriver.WebDriver (session=\"6b85011c-41ef-4316-9579-a2b108dc9200\")>, 'device2': <appium.webdriver.webdriver.WebDriver (session=\"f227cef4-402d-4092-a828-cd2d7d1a1873\")>}\n\n    @pytest.mark.app_type(\"ai_mate\")\n    def test_quick_pairing_multi_device(parallel_drivers):\n        \"\"\"多设备快速配对测试 - xdist 兼容\"\"\"\n        failed_devices = []\n    \n        for device_name, driver in parallel_drivers.items():\n            try:\n                device = DevicePage(driver)\n                popup = PopupPage(driver)\n    \n                popup.handle_interference_popup()\n    \n                # 快速配对流程\n                assert device.complete_pairing_flow(), f\"{device_name} 快速配对失败\"\n    \n                print(f\"✅ {device_name} - 快速配对成功\")\n            except Exception as e:\n                print(f\"❌ {device_name} - 快速配对失败: {e}\")\n                failed_devices.append(device_name)\n    \n        if failed_devices:\n>           pytest.fail(f\"快速测试失败设备: {', '.join(failed_devices)}\")\nE           Failed: 快速测试失败设备: device1, device2\n\nai_mate_tests\\testsplan\\test_search_and_pair.py:88: Failed","steps":[],"attachments":[{"uid":"d95d6587257f3cf8","name":"device1_ai_mate_tests/testsplan/test_search_and_pair.py__test_quick_pairing_multi_device","source":"d95d6587257f3cf8.png","type":"image/png","size":456007},{"uid":"9a55c67b9137e01b","name":"device2_ai_mate_tests/testsplan/test_search_and_pair.py__test_quick_pairing_multi_device","source":"9a55c67b9137e01b.png","type":"image/png","size":445095},{"uid":"948cada0e7d6ae74","name":"stdout","source":"948cada0e7d6ae74.txt","type":"text/plain","size":1207}],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"attachmentsCount":3},"afterStages":[{"name":"parallel_drivers::0","time":{"start":1761015169604,"stop":1761015170894,"duration":1290},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"parentSuite","value":"ai_mate_tests.testsplan"},{"name":"suite","value":"test_search_and_pair"},{"name":"host","value":"DESKTOP-TFDMFFN"},{"name":"thread","value":"10432-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"ai_mate_tests.testsplan.test_search_and_pair"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"2c9f160da4fd2a80","status":"skipped","statusDetails":"XFAIL 快速配对失败设备: device1, device2\n\n_pytest.outcomes.XFailed: 快速配对失败设备: device1, device2","time":{"start":1761013674936,"stop":1761013720240,"duration":45304}}],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"a49e7bfb31e8379a.json","parameterValues":[]}