{"uid":"b9aeb1ea05a36534","name":"test_device_pairing_multi_device","fullName":"ai_mate_tests.testsplan.test_search_and_pair#test_device_pairing_multi_device","historyId":"242d2332d267b50f121cdb0dcf70c76e","time":{"start":1761013627315,"stop":1761013649712,"duration":22397},"description":"多设备并行配对测试 - xdist 兼容","descriptionHtml":"<p>多设备并行配对测试 - xdist 兼容</p>\n","status":"skipped","statusMessage":"XFAIL 部分设备配对失败: device2, device1\n\n_pytest.outcomes.XFailed: 部分设备配对失败: device2, device1","statusTrace":"parallel_drivers = {'device1': <appium.webdriver.webdriver.WebDriver (session=\"af7f29ec-a59a-42aa-a6a8-5217b6f495a4\")>, 'device2': <appium.webdriver.webdriver.WebDriver (session=\"527dd173-1075-44d1-9df6-45c690d821a6\")>}\n\n    @pytest.mark.app_type(\"ai_mate\")\n    @pytest.mark.pairing_test\n    def test_device_pairing_multi_device(parallel_drivers):\n        \"\"\"多设备并行配对测试 - xdist 兼容\"\"\"\n        with allure.step(\"多设备并行配对测试\"):\n            results = {}\n    \n            # 并行执行所有设备配对\n            with ThreadPoolExecutor(max_workers=len(parallel_drivers)) as executor:\n                future_to_device = {\n                    executor.submit(_run_single_pairing_test, driver, device_name): device_name\n                    for device_name, driver in parallel_drivers.items()\n                }\n    \n                for future in as_completed(future_to_device):\n                    device_name, success, error = future.result()\n                    results[device_name] = (success, error)\n    \n                    # 记录到 Allure\n                    if success:\n                        allure.attach(f\"设备 {device_name} 配对成功\", name=f\"{device_name}_结果\")\n                    else:\n                        allure.attach(f\"设备 {device_name} 配对失败: {error}\", name=f\"{device_name}_错误\")\n    \n            # 汇总结果\n            failed_devices = [name for name, (success, error) in results.items() if not success]\n    \n            if failed_devices:\n>               pytest.xfail(f\"部分设备配对失败: {', '.join(failed_devices)}\")\nE               _pytest.outcomes.XFailed: 部分设备配对失败: device2, device1\n\nai_mate_tests\\testsplan\\test_search_and_pair.py:60: XFailed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"device_manager","time":{"start":1761013516388,"stop":1761013516389,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"parallel_drivers","time":{"start":1761013604951,"stop":1761013627314,"duration":22363},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"description":"多设备并行配对测试 - xdist 兼容","status":"skipped","statusMessage":"XFAIL 部分设备配对失败: device2, device1\n\n_pytest.outcomes.XFailed: 部分设备配对失败: device2, device1","statusTrace":"parallel_drivers = {'device1': <appium.webdriver.webdriver.WebDriver (session=\"af7f29ec-a59a-42aa-a6a8-5217b6f495a4\")>, 'device2': <appium.webdriver.webdriver.WebDriver (session=\"527dd173-1075-44d1-9df6-45c690d821a6\")>}\n\n    @pytest.mark.app_type(\"ai_mate\")\n    @pytest.mark.pairing_test\n    def test_device_pairing_multi_device(parallel_drivers):\n        \"\"\"多设备并行配对测试 - xdist 兼容\"\"\"\n        with allure.step(\"多设备并行配对测试\"):\n            results = {}\n    \n            # 并行执行所有设备配对\n            with ThreadPoolExecutor(max_workers=len(parallel_drivers)) as executor:\n                future_to_device = {\n                    executor.submit(_run_single_pairing_test, driver, device_name): device_name\n                    for device_name, driver in parallel_drivers.items()\n                }\n    \n                for future in as_completed(future_to_device):\n                    device_name, success, error = future.result()\n                    results[device_name] = (success, error)\n    \n                    # 记录到 Allure\n                    if success:\n                        allure.attach(f\"设备 {device_name} 配对成功\", name=f\"{device_name}_结果\")\n                    else:\n                        allure.attach(f\"设备 {device_name} 配对失败: {error}\", name=f\"{device_name}_错误\")\n    \n            # 汇总结果\n            failed_devices = [name for name, (success, error) in results.items() if not success]\n    \n            if failed_devices:\n>               pytest.xfail(f\"部分设备配对失败: {', '.join(failed_devices)}\")\nE               _pytest.outcomes.XFailed: 部分设备配对失败: device2, device1\n\nai_mate_tests\\testsplan\\test_search_and_pair.py:60: XFailed","steps":[{"name":"多设备并行配对测试","time":{"start":1761013627315,"stop":1761013649710,"duration":22395},"status":"failed","statusMessage":"_pytest.outcomes.XFailed: 部分设备配对失败: device2, device1\n","statusTrace":"  File \"C:\\Users\\536131\\Documents\\GitHub\\cg02app\\ai_mate_tests\\testsplan\\test_search_and_pair.py\", line 60, in test_device_pairing_multi_device\n    pytest.xfail(f\"部分设备配对失败: {', '.join(failed_devices)}\")\n    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\536131\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\outcomes.py\", line 205, in xfail\n    raise XFailed(reason)\n","steps":[],"attachments":[{"uid":"4bcd2b6c3792ea57","name":"device2_错误","source":"4bcd2b6c3792ea57.attach","type":"text/plain","size":537},{"uid":"8bb4e24bea10f764","name":"device1_错误","source":"8bb4e24bea10f764.attach","type":"text/plain","size":537}],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"attachmentsCount":2}],"attachments":[{"uid":"b33e267eef689896","name":"stdout","source":"b33e267eef689896.txt","type":"text/plain","size":1195}],"parameters":[],"stepsCount":1,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"attachmentsCount":3},"afterStages":[{"name":"parallel_drivers::0","time":{"start":1761013649723,"stop":1761013652995,"duration":3272},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"tag","value":"pairing_test"},{"name":"parentSuite","value":"ai_mate_tests.testsplan"},{"name":"suite","value":"test_search_and_pair"},{"name":"host","value":"DESKTOP-TFDMFFN"},{"name":"thread","value":"50748-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"ai_mate_tests.testsplan.test_search_and_pair"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["pairing_test"]},"source":"b9aeb1ea05a36534.json","parameterValues":[]}