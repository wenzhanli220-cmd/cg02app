{"uid":"2c9f160da4fd2a80","name":"test_quick_pairing_multi_device","fullName":"ai_mate_tests.testsplan.test_search_and_pair#test_quick_pairing_multi_device","historyId":"12933beb0eefa3d22e04cb2866865a99","time":{"start":1761013674936,"stop":1761013720240,"duration":45304},"description":"多设备快速配对测试 - xdist 兼容","descriptionHtml":"<p>多设备快速配对测试 - xdist 兼容</p>\n","status":"skipped","statusMessage":"XFAIL 快速配对失败设备: device1, device2\n\n_pytest.outcomes.XFailed: 快速配对失败设备: device1, device2","statusTrace":"parallel_drivers = {'device1': <appium.webdriver.webdriver.WebDriver (session=\"4afb8582-30da-459a-a07f-f26dc3f096f7\")>, 'device2': <appium.webdriver.webdriver.WebDriver (session=\"a74d1ab3-df35-4ba0-af1b-9add7b989634\")>}\n\n    @pytest.mark.app_type(\"ai_mate\")\n    def test_quick_pairing_multi_device(parallel_drivers):\n        \"\"\"多设备快速配对测试 - xdist 兼容\"\"\"\n        failed_devices = []\n    \n        for device_name, driver in parallel_drivers.items():\n            try:\n                device = DevicePage(driver)\n                popup = PopupPage(driver)\n    \n                popup.handle_interference_popup()\n    \n                # 快速配对流程\n                assert device.complete_pairing_flow(), f\"{device_name} 快速配对失败\"\n    \n                print(f\"✅ {device_name} - 快速配对成功\")\n            except Exception as e:\n                print(f\"❌ {device_name} - 快速配对失败: {e}\")\n                failed_devices.append(device_name)\n    \n        if failed_devices:\n>           pytest.xfail(f\"快速配对失败设备: {', '.join(failed_devices)}\")\nE           _pytest.outcomes.XFailed: 快速配对失败设备: device1, device2\n\nai_mate_tests\\testsplan\\test_search_and_pair.py:86: XFailed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"device_manager","time":{"start":1761013516388,"stop":1761013516389,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"parallel_drivers","time":{"start":1761013653006,"stop":1761013674935,"duration":21929},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"description":"多设备快速配对测试 - xdist 兼容","status":"skipped","statusMessage":"XFAIL 快速配对失败设备: device1, device2\n\n_pytest.outcomes.XFailed: 快速配对失败设备: device1, device2","statusTrace":"parallel_drivers = {'device1': <appium.webdriver.webdriver.WebDriver (session=\"4afb8582-30da-459a-a07f-f26dc3f096f7\")>, 'device2': <appium.webdriver.webdriver.WebDriver (session=\"a74d1ab3-df35-4ba0-af1b-9add7b989634\")>}\n\n    @pytest.mark.app_type(\"ai_mate\")\n    def test_quick_pairing_multi_device(parallel_drivers):\n        \"\"\"多设备快速配对测试 - xdist 兼容\"\"\"\n        failed_devices = []\n    \n        for device_name, driver in parallel_drivers.items():\n            try:\n                device = DevicePage(driver)\n                popup = PopupPage(driver)\n    \n                popup.handle_interference_popup()\n    \n                # 快速配对流程\n                assert device.complete_pairing_flow(), f\"{device_name} 快速配对失败\"\n    \n                print(f\"✅ {device_name} - 快速配对成功\")\n            except Exception as e:\n                print(f\"❌ {device_name} - 快速配对失败: {e}\")\n                failed_devices.append(device_name)\n    \n        if failed_devices:\n>           pytest.xfail(f\"快速配对失败设备: {', '.join(failed_devices)}\")\nE           _pytest.outcomes.XFailed: 快速配对失败设备: device1, device2\n\nai_mate_tests\\testsplan\\test_search_and_pair.py:86: XFailed","steps":[],"attachments":[{"uid":"db5c765b84f84a15","name":"stdout","source":"db5c765b84f84a15.txt","type":"text/plain","size":1207}],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"attachmentsCount":1},"afterStages":[{"name":"parallel_drivers::0","time":{"start":1761013720244,"stop":1761013723521,"duration":3277},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"parentSuite","value":"ai_mate_tests.testsplan"},{"name":"suite","value":"test_search_and_pair"},{"name":"host","value":"DESKTOP-TFDMFFN"},{"name":"thread","value":"50748-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"ai_mate_tests.testsplan.test_search_and_pair"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"2c9f160da4fd2a80.json","parameterValues":[]}