{"name": "test_device_pairing_multi_device", "status": "broken", "statusDetails": {"message": "RuntimeError: device2 测试失败: Message: An element could not be located on the page using the given search parameters.; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#nosuchelementexception\nStacktrace:\nNoSuchElementError: An element could not be located on the page using the given search parameters.\n    at AndroidUiautomator2Driver.findElOrEls (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\appium-android-driver\\lib\\commands\\find.js:75:11)", "trace": "driver = <appium.webdriver.webdriver.WebDriver (session=\"b75bff29-5b8f-41e5-a2bf-2361574a6d2b\")>, device_name = 'device2'\n\n    def _run_single_pairing_test(driver, device_name):\n        \"\"\"单设备配对测试函数\"\"\"\n        try:\n            welcome = WelcomePage(driver)\n            device = DevicePage(driver)\n            popup = PopupPage(driver)\n    \n            popup.handle_interference_popup()\n>           welcome.accept_all()\n\nai_mate_tests\\testsplan\\test_search_and_pair.py:17: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nai_mate_tests\\pages\\welcome_page.py:6: in accept_all\n    self.click_by_config(\"agree_protocol\")\nai_mate_tests\\pages\\base_page.py:42: in click_by_config\n    return self.element_manager.click(self.driver, element_key)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nai_mate_tests\\utils\\element_manager.py:20: in click\n    driver.find_element(by, locator).click()\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\appium\\webdriver\\webdriver.py:409: in find_element\n    return self.execute(RemoteCommand.FIND_ELEMENT, {'using': by, 'value': value})['value']\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:458: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <appium.webdriver.errorhandler.MobileErrorHandler object at 0x000001EECA4D31D0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"An element could not be located on the page u...ces\\\\\\\\app\\\\\\\\node_modules\\\\\\\\appium\\\\\\\\node_modules\\\\\\\\appium-android-driver\\\\\\\\lib\\\\\\\\commands\\\\\\\\find.js:75:11)\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        https://www.w3.org/TR/webdriver/#errors\n        \"\"\"\n        payload = response.get('value', '')\n        try:\n            payload_dict = json.loads(payload)\n        except (json.JSONDecodeError, TypeError):\n            return\n        if not isinstance(payload_dict, dict):\n            return\n        value = payload_dict.get('value')\n        if not isinstance(value, dict):\n            return\n        error = value.get('error')\n        if not error:\n            return\n    \n        message = value.get('message', error)\n        stacktrace = value.get('stacktrace', '')\n        # In theory, we should also be checking HTTP status codes.\n        # Java client, for example, prints a warning if the actual `error`\n        # value does not match to the response's HTTP status code.\n        exception_class: Type[sel_exceptions.WebDriverException] = ERROR_TO_EXC_MAPPING.get(\n            error, sel_exceptions.WebDriverException\n        )\n        if exception_class is sel_exceptions.WebDriverException and message:\n            if message == 'No such context found.':\n                exception_class = appium_exceptions.NoSuchContextException\n            elif message == 'That command could not be executed in the current context.':\n                exception_class = appium_exceptions.InvalidSwitchToTargetException\n    \n        if exception_class is sel_exceptions.UnexpectedAlertPresentException:\n            raise sel_exceptions.UnexpectedAlertPresentException(\n                msg=message,\n                stacktrace=format_stacktrace(stacktrace),\n                alert_text=value.get('data'),\n            )\n>       raise exception_class(msg=message, stacktrace=format_stacktrace(stacktrace))\nE       selenium.common.exceptions.NoSuchElementException: Message: An element could not be located on the page using the given search parameters.; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#nosuchelementexception\nE       Stacktrace:\nE       NoSuchElementError: An element could not be located on the page using the given search parameters.\nE           at AndroidUiautomator2Driver.findElOrEls (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\appium-android-driver\\lib\\commands\\find.js:75:11)\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\appium\\webdriver\\errorhandler.py:122: NoSuchElementException\n\nDuring handling of the above exception, another exception occurred:\n\nparallel_drivers = {'device1': <appium.webdriver.webdriver.WebDriver (session=\"df86f2fc-54b0-42ec-bd09-9afc36f66095\")>, 'device2': <appium.webdriver.webdriver.WebDriver (session=\"b75bff29-5b8f-41e5-a2bf-2361574a6d2b\")>}\n\n    @pytest.mark.app_type(\"ai_mate\")\n    @pytest.mark.pairing_test\n    def test_device_pairing_multi_device(parallel_drivers):\n        \"\"\"多设备并行配对测试 - xdist 兼容\"\"\"\n        with allure.step(\"多设备并行配对测试\"):\n            results = {}\n    \n            # 并行执行所有设备配对\n            with ThreadPoolExecutor(max_workers=len(parallel_drivers)) as executor:\n                future_to_device = {\n                    executor.submit(_run_single_pairing_test, driver, device_name): device_name\n                    for device_name, driver in parallel_drivers.items()\n                }\n    \n                for future in as_completed(future_to_device):\n>                   device_name, success, error = future.result()\n                                                  ^^^^^^^^^^^^^^^\n\nai_mate_tests\\testsplan\\test_search_and_pair.py:48: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\concurrent\\futures\\_base.py:449: in result\n    return self.__get_result()\n           ^^^^^^^^^^^^^^^^^^^\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\concurrent\\futures\\_base.py:401: in __get_result\n    raise self._exception\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\concurrent\\futures\\thread.py:59: in run\n    result = self.fn(*self.args, **self.kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ndriver = <appium.webdriver.webdriver.WebDriver (session=\"b75bff29-5b8f-41e5-a2bf-2361574a6d2b\")>, device_name = 'device2'\n\n    def _run_single_pairing_test(driver, device_name):\n        \"\"\"单设备配对测试函数\"\"\"\n        try:\n            welcome = WelcomePage(driver)\n            device = DevicePage(driver)\n            popup = PopupPage(driver)\n    \n            popup.handle_interference_popup()\n            welcome.accept_all()\n            popup.handle_interference_popup()\n    \n            device.search_device()\n            device.pair_device()\n    \n            assert device.is_paired_success(timeout=30), f\"{device_name} 配对失败\"\n    \n            print(f\"✅ {device_name} - 配对成功\")\n            return device_name, True, None\n        except Exception as e:\n            print(f\"❌ {device_name} - 配对失败: {e}\")\n>           raise RuntimeError(f\"{device_name} 测试失败: {e}\")\nE           RuntimeError: device2 测试失败: Message: An element could not be located on the page using the given search parameters.; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#nosuchelementexception\nE           Stacktrace:\nE           NoSuchElementError: An element could not be located on the page using the given search parameters.\nE               at AndroidUiautomator2Driver.findElOrEls (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\appium-android-driver\\lib\\commands\\find.js:75:11)\n\nai_mate_tests\\testsplan\\test_search_and_pair.py:29: RuntimeError"}, "description": "多设备并行配对测试 - xdist 兼容", "steps": [{"name": "多设备并行配对测试", "status": "broken", "statusDetails": {"message": "RuntimeError: device2 测试失败: Message: An element could not be located on the page using the given search parameters.; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#nosuchelementexception\nStacktrace:\nNoSuchElementError: An element could not be located on the page using the given search parameters.\n    at AndroidUiautomator2Driver.findElOrEls (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\appium-android-driver\\lib\\commands\\find.js:75:11)\n", "trace": "  File \"C:\\Users\\536131\\Documents\\GitHub\\cg02app\\ai_mate_tests\\testsplan\\test_search_and_pair.py\", line 48, in test_device_pairing_multi_device\n    device_name, success, error = future.result()\n                                  ~~~~~~~~~~~~~^^\n  File \"C:\\Users\\536131\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\n    return self.__get_result()\n           ~~~~~~~~~~~~~~~~~^^\n  File \"C:\\Users\\536131\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\n    raise self._exception\n  File \"C:\\Users\\536131\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\concurrent\\futures\\thread.py\", line 59, in run\n    result = self.fn(*self.args, **self.kwargs)\n  File \"C:\\Users\\536131\\Documents\\GitHub\\cg02app\\ai_mate_tests\\testsplan\\test_search_and_pair.py\", line 29, in _run_single_pairing_test\n    raise RuntimeError(f\"{device_name} 测试失败: {e}\")\n"}, "start": 1761015008384, "stop": 1761015051921}], "attachments": [{"name": "device1_ai_mate_tests/testsplan/test_search_and_pair.py__test_device_pairing_multi_device", "source": "79828969-f672-483a-8266-3b3476a5facb-attachment.png", "type": "image/png"}, {"name": "device2_ai_mate_tests/testsplan/test_search_and_pair.py__test_device_pairing_multi_device", "source": "9c3c0a7d-675f-4fbb-a911-b2bebc9937ce-attachment.png", "type": "image/png"}, {"name": "stdout", "source": "d5f61bac-1039-49b5-b6e4-e375d7a3abda-attachment.txt", "type": "text/plain"}], "start": 1761015008383, "stop": 1761015051927, "uuid": "cddcfc68-ff55-4d4b-b95e-ece63109c2d5", "historyId": "242d2332d267b50f121cdb0dcf70c76e", "testCaseId": "242d2332d267b50f121cdb0dcf70c76e", "fullName": "ai_mate_tests.testsplan.test_search_and_pair#test_device_pairing_multi_device", "labels": [{"name": "tag", "value": "pairing_test"}, {"name": "parentSuite", "value": "ai_mate_tests.testsplan"}, {"name": "suite", "value": "test_search_and_pair"}, {"name": "host", "value": "DESKTOP-TFDMFFN"}, {"name": "thread", "value": "10432-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "ai_mate_tests.testsplan.test_search_and_pair"}], "titlePath": ["ai_mate_tests", "testsplan", "test_search_and_pair.py"]}