{"name": "test_open_bluetooth", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: An element could not be located on the page using the given search parameters.; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#nosuchelementexception\nStacktrace:\nNoSuchElementError: An element could not be located on the page using the given search parameters.\n    at AndroidUiautomator2Driver.findElOrEls (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\appium-android-driver\\lib\\commands\\find.js:75:11)", "trace": "settings_driver = <appium.webdriver.webdriver.WebDriver (session=\"518a9508-1f95-4318-9cd9-0c7a59978a80\")>\n\n    def test_open_bluetooth(settings_driver: WebDriver):\n        \"\"\"\n        打开设置 → 进入蓝牙 → 打开蓝牙开关 → 检查是否有已配对设备已连接\n        \"\"\"\n        driver = settings_driver\n    \n        # Step 1: 点击进入 \"蓝牙\" 菜单\n        bluetooth_menu = driver.find_element(\n            \"xpath\",\n            '//android.widget.TextView[@resource-id=\"android:id/title\" and @text=\"蓝牙\"]'\n        )\n        bluetooth_menu.click()\n    \n        # Step 2: 找到右上角蓝牙开关\n        switch = driver.find_element(\"class name\", \"android.widget.Switch\")\n        if switch.get_attribute(\"checked\") == \"false\":\n            switch.click()\n    \n        # Step 3: 等待蓝牙开启并检测是否有已配对设备连接\n>       connected_device = driver.find_element(\n            \"xpath\",\n            '//android.widget.TextView[@resource-id=\"android:id/summary\" and contains(@text,\"使用中，电池电量：\")]'\n        )\n\nai_mate_tests\\testsplan\\test_open_bluetooth.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\appium\\webdriver\\webdriver.py:409: in find_element\n    return self.execute(RemoteCommand.FIND_ELEMENT, {'using': by, 'value': value})['value']\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:458: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <appium.webdriver.errorhandler.MobileErrorHandler object at 0x000001AF6316D550>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"An element could not be located on the page u...ces\\\\\\\\app\\\\\\\\node_modules\\\\\\\\appium\\\\\\\\node_modules\\\\\\\\appium-android-driver\\\\\\\\lib\\\\\\\\commands\\\\\\\\find.js:75:11)\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        https://www.w3.org/TR/webdriver/#errors\n        \"\"\"\n        payload = response.get('value', '')\n        try:\n            payload_dict = json.loads(payload)\n        except (json.JSONDecodeError, TypeError):\n            return\n        if not isinstance(payload_dict, dict):\n            return\n        value = payload_dict.get('value')\n        if not isinstance(value, dict):\n            return\n        error = value.get('error')\n        if not error:\n            return\n    \n        message = value.get('message', error)\n        stacktrace = value.get('stacktrace', '')\n        # In theory, we should also be checking HTTP status codes.\n        # Java client, for example, prints a warning if the actual `error`\n        # value does not match to the response's HTTP status code.\n        exception_class: Type[sel_exceptions.WebDriverException] = ERROR_TO_EXC_MAPPING.get(\n            error, sel_exceptions.WebDriverException\n        )\n        if exception_class is sel_exceptions.WebDriverException and message:\n            if message == 'No such context found.':\n                exception_class = appium_exceptions.NoSuchContextException\n            elif message == 'That command could not be executed in the current context.':\n                exception_class = appium_exceptions.InvalidSwitchToTargetException\n    \n        if exception_class is sel_exceptions.UnexpectedAlertPresentException:\n            raise sel_exceptions.UnexpectedAlertPresentException(\n                msg=message,\n                stacktrace=format_stacktrace(stacktrace),\n                alert_text=value.get('data'),\n            )\n>       raise exception_class(msg=message, stacktrace=format_stacktrace(stacktrace))\nE       selenium.common.exceptions.NoSuchElementException: Message: An element could not be located on the page using the given search parameters.; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#nosuchelementexception\nE       Stacktrace:\nE       NoSuchElementError: An element could not be located on the page using the given search parameters.\nE           at AndroidUiautomator2Driver.findElOrEls (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\appium-android-driver\\lib\\commands\\find.js:75:11)\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\appium\\webdriver\\errorhandler.py:122: NoSuchElementException"}, "description": "\n打开设置 → 进入蓝牙 → 打开蓝牙开关 → 检查是否有已配对设备已连接\n", "start": 1758591868966, "stop": 1758591882801, "uuid": "641570b2-f666-4b6e-bda3-34165eab5706", "historyId": "4160602f4b1603d970b22e8c04a0c1c0", "testCaseId": "4160602f4b1603d970b22e8c04a0c1c0", "fullName": "ai_mate_tests.testsplan.test_open_bluetooth#test_open_bluetooth", "labels": [{"name": "parentSuite", "value": "ai_mate_tests.testsplan"}, {"name": "suite", "value": "test_open_bluetooth"}, {"name": "host", "value": "DESKTOP-TFDMFFN"}, {"name": "thread", "value": "45976-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "ai_mate_tests.testsplan.test_open_bluetooth"}], "titlePath": ["ai_mate_tests", "testsplan", "test_open_bluetooth.py"]}